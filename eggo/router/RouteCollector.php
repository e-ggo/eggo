<?php
declare(strict_types=1);

namespace Eggo\router;

use FastRoute\RouteCollector as RouteCollectors;

class RouteCollector extends RouteCollectors
{
    /** @var array List of middlewares called using the addMiddleware() method. */
    protected $Middlewares = [];

    /**
     * Encapsulate all the routes that are added from $func(Router) with this middleware.
     *
     * If the return value of the middleware is false, throws a RouteMiddlewareFailedException.
     *
     * @param string|string[] $middlewareClass The middleware to use
     * @param callable $func
     */
    public function addMiddleware($middlewareClass, callable $func): void
    {
        array_push($this->Middlewares, $middlewareClass);
        $func($this);
        array_pop($this->Middlewares);
    }

    public function addRoute($httpMethod, $route, $handler)
    {
        $handler['middlewares'] = $this->Middlewares;
        parent::addRoute($httpMethod, $route, $handler); // TODO: Change the autogenerated stub
    }

}